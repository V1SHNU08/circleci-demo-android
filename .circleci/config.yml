version: 2.1

orbs:
  android: circleci/android@2.1.2
  ruby: circleci/ruby@2.0.0

jobs:
  lint:
    executor:
      name: android/android-docker
      resource-class: xlarge
      tag: 2022.09.1
    steps:
      - checkout
      - android/restore-gradle-cache
      - run: ./gradlew lintDebug
      - android/save-gradle-cache

  unit_test:
    executor:
      name: android/android-docker
      resource-class: xlarge
      tag: 2022.09.1
    steps:
      - checkout
      - android/restore-gradle-cache
      - run: ./gradlew testDebugUnitTest
      - android/save-gradle-cache
      - store_test_results:
          path: ./app/build/test-results/testDebugUnitTest

  unit_test_parallel:
    executor:
      name: android/android-docker
      resource-class: xlarge
      tag: 2022.09.1
    parallelism: 2
    steps:
      - checkout
      - android/restore-gradle-cache
      - run: |
            cd app/src/test/java
            CLASSNAMES=$(circleci tests glob "**/*Test.kt" \
              | sed 's@/@.@g' \
              | sed 's/.kt//' \
              | circleci tests split --split-by=timings --timings-type=classname)
            cd ../../../../
            GRADLE_ARGS=$(echo $CLASSNAMES | awk '{for (i=1; i<=NF; i++) print "--tests",$i}')
            echo "Prepared arguments for Gradle: $GRADLE_ARGS"
            ./gradlew testDebugUnitTest $GRADLE_ARGS -Pcircleci
      - android/save-gradle-cache
      - store_test_results:
          path: ./app/build/test-results/testDebugUnitTest

  integration_test:
    executor:
      name: android/android-machine
      resource-class: xlarge
      tag: 2022.09.1
    steps:
      - checkout
      - android/start-emulator-and-run-tests
      - store_test_results:
          path: ./app/build/outputs/androidTest-results/connected

  build_for_integration_test:
    executor:
      name: android/android-machine
      resource-class: xlarge
      tag: 2022.09.1
    steps:
      - checkout
      - run:
          name: Split Espresso tests
          command: |
            cd app/src/androidTest/java
            classnames=$(circleci tests glob "**/*Test.kt" \
              | sed 's@/@.@g' \
              | sed 's/.kt//' \
              | circleci tests split --split-by=timings --timings-type=classname)
            cd ../../../../
            gradle_args=$(echo $classnames | awk '{for (i=1; i<=NF; i++) printf "-Pandroid.testInstrumentationRunnerArguments.class="$i}')
            echo "Prepared arguments for Gradle: $gradle_args"
            echo 'export GRADLE_ARGS="$gradle_args"' >> $BASH_ENV
            echo 'export SAMPLE=sample' >> $BASH_ENV
      - run: |
          echo $GRADLE_ARGS
          echo $SAMPLE
      - android/restore-gradle-cache
      - run: ./gradlew assembleDebugAndroidTest
      - android/save-gradle-cache
      - persist_to_workspace:
          root: ~/
          paths: .

  integration_test_parallel:
    parallelism: 2
    executor:
      name: android/android-machine
      resource-class: xlarge
      tag: 2022.09.1
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - android/start-emulator-and-run-tests:
          post-emulator-launch-assemble-command: ""
          test-command: ./gradlew connectedDebugAndroidTest $GRADLE_ARGS
      - store_test_results:
          path: ./app/build/outputs/androidTest-results/connected

  beta:
    executor:
      name: android/android-docker
      resource-class: xlarge
      tag: 2022.09.1
    steps:
      - checkout
      - android/restore-gradle-cache
      - ruby/install-deps
      - run: bundle exec fastlane beta
      - android/save-gradle-cache

workflows:
  main:
    jobs:
      - lint
      - unit_test
      - unit_test_parallel
      - integration_test
      - build_for_integration_test
      - integration_test_parallel:
          requires:
            - build_for_integration_test
      - beta:
          context:
            - mobile
          filters:
            branches:
              only:
                - master
